cd src/kubernetes
kubectl apply -f spring-petclinic-api-gateway.yml
kubectl apply -f spring-petclinic-admin-server.yml

kubectl get services


AKS_MC_RG=$(az aks show -n $AKSCLUSTER -g $RESOURCE_GROUP | jq -r '.nodeResourceGroup')
   
echo $AKS_MC_RG
   
AKS_MC_LB_INTERNAL=kubernetes-internal
   
az network lb frontend-ip list -g $AKS_MC_RG --lb-name=$AKS_MC_LB_INTERNAL -o table
   
AKS_MC_LB_INTERNAL_FE_IP1=$(az network lb frontend-ip list -g $AKS_MC_RG --lb-name=$AKS_MC_LB_INTERNAL | jq -r '.[0].privateIPAddress')
AKS_MC_LB_INTERNAL_FE_IP2=$(az network lb frontend-ip list -g $AKS_MC_RG --lb-name=$AKS_MC_LB_INTERNAL | jq -r '.[1].privateIPAddress')
   
echo $AKS_MC_LB_INTERNAL_FE_IP1
echo $AKS_MC_LB_INTERNAL_FE_IP2


APPLICATION_GATEWAY_SUBNET_CIDR=10.1.2.0/24
   
APPLICATION_GATEWAY_SUBNET_NAME=app-gw-subnet
   
az network vnet subnet create \
    --name $APPLICATION_GATEWAY_SUBNET_NAME \
    --resource-group $RESOURCE_GROUP \
    --vnet-name $VIRTUAL_NETWORK_NAME \
    --address-prefix $APPLICATION_GATEWAY_SUBNET_CIDR

cd src

az keyvault certificate get-default-policy > sample-policy.json

DNS_LABEL=$APPNAME$UNIQUEID
DNS_NAME=sampleapp.${DNS_LABEL}.com
cat sample-policy.json | sed "s/myapp.mydomain.com/${DNS_NAME}/g" > result-policy.json


CERT_NAME_IN_KV=$APPNAME-certificate
az keyvault certificate create \
    --vault-name $KEYVAULT_NAME \
    --name $CERT_NAME_IN_KV \
    --policy @result-policy.json

APPLICATION_GATEWAY_PUBLIC_IP_NAME=pip-$APPNAME-app-gw
az network public-ip create \
    --resource-group $RESOURCE_GROUP \
    --location $LOCATION \
    --name $APPLICATION_GATEWAY_PUBLIC_IP_NAME \
    --allocation-method Static \
    --sku Standard \
    --dns-name $DNS_LABEL

APPGW_IDENTITY_NAME=id-$APPNAME-appgw
az identity create \
    --resource-group $RESOURCE_GROUP \
    --name $APPGW_IDENTITY_NAME

APPGW_IDENTITY_CLIENTID=$(az identity show --resource-group $RESOURCE_GROUP --name $APPGW_IDENTITY_NAME --query clientId --output tsv)
APPGW_IDENTITY_OID=$(az ad sp show --id $APPGW_IDENTITY_CLIENTID --query id --output tsv)

az keyvault set-policy \
    --name $KEYVAULT_NAME \
    --resource-group $RESOURCE_GROUP \
    --object-id $APPGW_IDENTITY_OID \
    --secret-permissions get list \
    --certificate-permissions get list

KEYVAULT_SECRET_ID_FOR_CERT=$(az keyvault certificate show --name $CERT_NAME_IN_KV --vault-name $KEYVAULT_NAME --query sid --output tsv)

 WAF_POLICY_NAME=waf-$APPNAME-$UNIQUEID
 az network application-gateway waf-policy create \
     --name $WAF_POLICY_NAME \
     --resource-group $RESOURCE_GROUP

APPGW_NAME=agw-$APPNAME-$UNIQUEID
#APIGW_NAME=$SPRING_APPS_SERVICE-api-gateway
#SPRING_APP_PRIVATE_FQDN=${APIGW_NAME}.private.azuremicroservices.io

az network application-gateway create \
    --name $APPGW_NAME \
    --resource-group $RESOURCE_GROUP \
    --location $LOCATION \
    --capacity 2 \
    --sku WAF_v2 \
    --frontend-port 443 \
    --http-settings-cookie-based-affinity Disabled \
    --http-settings-port 8080 \
    --http-settings-protocol Http \
    --public-ip-address $APPLICATION_GATEWAY_PUBLIC_IP_NAME \
    --vnet-name $VIRTUAL_NETWORK_NAME \
    --subnet $APPLICATION_GATEWAY_SUBNET_NAME \
    --servers $AKS_MC_LB_INTERNAL_FE_IP1 \
    --key-vault-secret-id $KEYVAULT_SECRET_ID_FOR_CERT \
    --identity $APPGW_IDENTITY_NAME \
    --priority "1" \
    --waf-policy $WAF_POLICY_NAME

az network application-gateway http-settings update --gateway-name $APPGW_NAME --protocol Http --port 8080 --name appGatewayBackendHttpSettings -g $RESOURCE_GROUP

kubectl get services
echo $AKS_MC_LB_INTERNAL_FE_IP1

az network application-gateway show-backend-health \
    --name $APPGW_NAME \
    --resource-group $RESOURCE_GROUP

az network public-ip show \
    --resource-group $RESOURCE_GROUP \
    --name $APPLICATION_GATEWAY_PUBLIC_IP_NAME \
    --query [ipAddress] \
    --output tsv

echo $DNS_NAME

<app-gateway-ip-address>   <custom-dns-name>


az network application-gateway address-pool create \
    --gateway-name $APPGW_NAME \
    --name adminbackend \
    --resource-group $RESOURCE_GROUP \
    --servers $AKS_MC_LB_INTERNAL_FE_IP2

az network application-gateway frontend-port create \
    --gateway-name $APPGW_NAME \
    --name port4433 \
    --port 4433 \
    --resource-group $RESOURCE_GROUP 

az network application-gateway frontend-port list \
    --gateway-name $APPGW_NAME \
    --resource-group $RESOURCE_GROUP 

az network application-gateway http-listener create \
    --frontend-port port4433 \
    --gateway-name $APPGW_NAME \
    --name adminlistener \
    --resource-group $RESOURCE_GROUP \
    --ssl-cert ${APPGW_NAME}SslCert

az network application-gateway rule create \
    --gateway-name $APPGW_NAME \
    --name adminroutingrule \
    --resource-group $RESOURCE_GROUP \
    --address-pool adminbackend \
    --http-listener adminlistener \
    --http-settings appGatewayBackendHttpSettings \
    --priority "2"

az network application-gateway show-backend-health \
    --name $APPGW_NAME \
    --resource-group $RESOURCE_GROUP

az network application-gateway waf-policy policy-setting update \
    --mode Detection \
    --policy-name $WAF_POLICY_NAME \
    --resource-group $RESOURCE_GROUP \
    --state Enabled









