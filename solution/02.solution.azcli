az login --use-device-code

UNIQUEID=$(openssl rand -hex 3)
echo $UNIQUEID
APPNAME=petclinic
RESOURCE_GROUP=rg-$APPNAME-$UNIQUEID
LOCATION=northeurope
az group create -g $RESOURCE_GROUP -l $LOCATION

MYACR=acr$APPNAME$UNIQUEID
az acr create \
    -n $MYACR \
    -g $RESOURCE_GROUP \
    --sku Basic

VIRTUAL_NETWORK_NAME=vnet-$APPNAME-$UNIQUEID
az network vnet create \
    --resource-group $RESOURCE_GROUP \
    --name $VIRTUAL_NETWORK_NAME \
    --location $LOCATION \
    --address-prefix 10.1.0.0/16
   
AKS_SUBNET_CIDR=10.1.0.0/24
az network vnet subnet create \
    --resource-group $RESOURCE_GROUP \
    --vnet-name $VIRTUAL_NETWORK_NAME \
    --address-prefixes $AKS_SUBNET_CIDR \
    --name aks-subnet 

SUBNET_ID=$(az network vnet subnet show --resource-group $RESOURCE_GROUP --vnet-name $VIRTUAL_NETWORK_NAME --name aks-subnet --query id -o tsv)

AKSCLUSTER=aks-$APPNAME-$UNIQUEID
az aks create \
    -n $AKSCLUSTER \
    -g $RESOURCE_GROUP \
    --generate-ssh-keys \
    --attach-acr $MYACR \
    --vnet-subnet-id $SUBNET_ID

https://github.com/vermegi/java-microservices-aks-lab/tree/3.0updates/config

curl -o admin-server.yml https://raw.githubusercontent.com/vermegi/java-microservices-aks-lab/3.0updates/config/admin-server.yml
curl -o api-gateway.yml https://raw.githubusercontent.com/vermegi/java-microservices-aks-lab/3.0updates/config/api-gateway.yml
curl -o application.yml https://raw.githubusercontent.com/vermegi/java-microservices-aks-lab/3.0updates/config/application.yml
curl -o customers-service.yml https://raw.githubusercontent.com/vermegi/java-microservices-aks-lab/3.0updates/config/customers-service.yml
curl -o discovery-server.yml https://raw.githubusercontent.com/vermegi/java-microservices-aks-lab/3.0updates/config/discovery-server.yml
curl -o tracing-server.yml https://raw.githubusercontent.com/vermegi/java-microservices-aks-lab/3.0updates/config/tracing-server.yml
curl -o vets-service.yml https://raw.githubusercontent.com/vermegi/java-microservices-aks-lab/3.0updates/config/vets-service.yml
curl -o visits-service.yml https://raw.githubusercontent.com/vermegi/java-microservices-aks-lab/3.0updates/config/visits-service.yml


MYSQL_SERVER_NAME=mysql-$APPNAME-$UNIQUEID
MYSQL_ADMIN_USERNAME=myadmin
MYSQL_ADMIN_PASSWORD=<myadmin-password>
DATABASE_NAME=petclinic
      
az mysql flexible-server create \
    --admin-user myadmin \
    --admin-password ${MYSQL_ADMIN_PASSWORD} \
    --name ${MYSQL_SERVER_NAME} \
    --resource-group ${RESOURCE_GROUP} 

 az mysql flexible-server db create \
     --server-name $MYSQL_SERVER_NAME \
     --resource-group $RESOURCE_GROUP \
     -d $DATABASE_NAME

 az mysql flexible-server firewall-rule create \
     --rule-name allAzureIPs \
     --name ${MYSQL_SERVER_NAME} \
     --resource-group ${RESOURCE_GROUP} \
     --start-ip-address 0.0.0.0 --end-ip-address 0.0.0.0


VERSION=3.0.2

cd src

mvn clean package -DskipTests

[INFO] Tests are skipped.
[INFO] 
[INFO] --- jar:3.3.0:jar (default-jar) @ spring-petclinic-api-gateway ---
[INFO] Building jar: /workspaces/java-microservices-aks-lab/src/spring-petclinic-api-gateway/target/spring-petclinic-api-gateway-3.0.2.jar
[INFO] 
[INFO] --- spring-boot:3.0.2:repackage (repackage) @ spring-petclinic-api-gateway ---
[INFO] Replacing main artifact with repackaged archive
   [INFO] ------------------------------------------------------------------------
   [INFO] Reactor Summary for spring-petclinic-microservices 3.0.2:
   [INFO] 
   [INFO] spring-petclinic-microservices ..................... SUCCESS [  0.249 s]
   [INFO] spring-petclinic-admin-server ...................... SUCCESS [ 16.123 s]
   [INFO] spring-petclinic-customers-service ................. SUCCESS [  6.749 s]
   [INFO] spring-petclinic-vets-service ...................... SUCCESS [  4.845 s]
   [INFO] spring-petclinic-visits-service .................... SUCCESS [  5.063 s]
   [INFO] spring-petclinic-config-server ..................... SUCCESS [  1.777 s]
   [INFO] spring-petclinic-discovery-server .................. SUCCESS [  2.563 s]
   [INFO] spring-petclinic-api-gateway ....................... SUCCESS [ 15.582 s]
   [INFO] ------------------------------------------------------------------------
   [INFO] BUILD SUCCESS
   [INFO] ------------------------------------------------------------------------
   [INFO] Total time:  55.901 s
   [INFO] Finished at: 2023-06-02T14:07:49Z
   [INFO] ------------------------------------------------------------------------

az acr login --name $MYACR

mkdir -p staging-acr
cd staging-acr

cp ../spring-petclinic-api-gateway/target/spring-petclinic-api-gateway-$VERSION.jar spring-petclinic-api-gateway-$VERSION.jar
cp ../spring-petclinic-admin-server/target/spring-petclinic-admin-server-$VERSION.jar spring-petclinic-admin-server-$VERSION.jar
cp ../spring-petclinic-customers-service/target/spring-petclinic-customers-service-$VERSION.jar spring-petclinic-customers-service-$VERSION.jar
cp ../spring-petclinic-visits-service/target/spring-petclinic-visits-service-$VERSION.jar spring-petclinic-visits-service-$VERSION.jar
cp ../spring-petclinic-vets-service/target/spring-petclinic-vets-service-$VERSION.jar spring-petclinic-vets-service-$VERSION.jar
cp ../spring-petclinic-config-server/target/spring-petclinic-config-server-$VERSION.jar spring-petclinic-config-server-$VERSION.jar
cp ../spring-petclinic-discovery-server/target/spring-petclinic-discovery-server-$VERSION.jar spring-petclinic-discovery-server-$VERSION.jar

az acr build \
    --resource-group $RESOURCE_GROUP \
    --registry $MYACR \
    --image spring-petclinic-api-gateway:$VERSION \
    --build-arg ARTIFACT_NAME=spring-petclinic-api-gateway-$VERSION.jar \
    --build-arg APP_PORT=8080 \
    .

az acr repository list \
   -n $MYACR

az acr build \
    --resource-group $RESOURCE_GROUP \
    --registry $MYACR \
    --image spring-petclinic-admin-server:$VERSION \
    --build-arg ARTIFACT_NAME=spring-petclinic-admin-server-$VERSION.jar \
    --build-arg APP_PORT=8080 \
    .
   
az acr build \
    --resource-group $RESOURCE_GROUP \
    --registry $MYACR \
    --image spring-petclinic-customers-service:$VERSION \
    --build-arg ARTIFACT_NAME=spring-petclinic-customers-service-$VERSION.jar \
    --build-arg APP_PORT=8080 \
    .
   
az acr build \
    --resource-group $RESOURCE_GROUP \
    --registry $MYACR \
    --image spring-petclinic-visits-service:$VERSION \
    --build-arg ARTIFACT_NAME=spring-petclinic-visits-service-$VERSION.jar \
    --build-arg APP_PORT=8080 \
    .
   
az acr build \
    --resource-group $RESOURCE_GROUP \
    --registry $MYACR \
    --image spring-petclinic-vets-service:$VERSION \
    --build-arg ARTIFACT_NAME=spring-petclinic-vets-service-$VERSION.jar \
    --build-arg APP_PORT=8080 \
    .

az acr build \
    --resource-group $RESOURCE_GROUP \
    --registry $MYACR \
    --image spring-petclinic-config-server:$VERSION \
    --build-arg ARTIFACT_NAME=spring-petclinic-config-server-$VERSION.jar \
    --build-arg APP_PORT=8888 \
    .

az acr build \
    --resource-group $RESOURCE_GROUP \
    --registry $MYACR \
    --image spring-petclinic-discovery-server:$VERSION \
    --build-arg ARTIFACT_NAME=spring-petclinic-discovery-server-$VERSION.jar \
    --build-arg APP_PORT=8761 \
    .

az acr repository list \
   -n $MYACR

az acr repository show-tags \
    -n $MYACR \
    --repository spring-petclinic-customers-service








