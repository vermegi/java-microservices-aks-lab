az mysql  flexible-server delete \
    --name $MYSQL_SERVER_NAME \
    --resource-group $RESOURCE_GROUP \
    --yes

MYSQL_DNS="private.mysql.database.azure.com"
az network private-dns zone create \
    -g $RESOURCE_GROUP \
    -n $MYSQL_DNS

DATABASE_SUBNET_CIDR=10.1.3.0/24
DATABASE_SUBNET_NAME=database-subnet
   
az network vnet subnet create \
    --name $DATABASE_SUBNET_NAME \
    --resource-group $RESOURCE_GROUP \
    --vnet-name $VIRTUAL_NETWORK_NAME \
    --address-prefix $DATABASE_SUBNET_CIDR

MYSQL_SERVER_NAME=mysql-vnet$APPNAME-$UNIQUEID
az mysql flexible-server create \
        --name ${MYSQL_SERVER_NAME} \
        --resource-group ${RESOURCE_GROUP}  \
        --location $LOCATION \
        --admin-user myadmin \
        --admin-password ${MYSQL_ADMIN_PASSWORD} \
        --sku-name Standard_B1ms  \
        --tier Burstable \
        --version 5.7 \
        --storage-size 20 \
        --vnet $VIRTUAL_NETWORK_NAME \
        --subnet $DATABASE_SUBNET_NAME \
        --private-dns-zone $MYSQL_DNS

az mysql flexible-server db create \
    --server-name $MYSQL_SERVER_NAME \
    --resource-group $RESOURCE_GROUP \
    -d $DATABASE_NAME

az mysql flexible-server show \
    --name $MYSQL_SERVER_NAME \
    --resource-group $RESOURCE_GROUP \
    --query fullyQualifiedDomainName

#Step 7 change to:
url: jdbc:mysql://<your-vnet-integrated-server-name>.mysql.database.azure.com:3306/petclinic?useSSL=true&serverTimezone=UTC

#8: ok
az mysql flexible-server identity assign \
    --resource-group $RESOURCE_GROUP \
    --server-name $MYSQL_SERVER_NAME \
    --identity $DB_ADMIN_USER_ASSIGNED_IDENTITY_NAME

#9:ok
az mysql flexible-server ad-admin create \
    --resource-group $RESOURCE_GROUP \
    --server-name $MYSQL_SERVER_NAME \
    --object-id $CURRENT_USER_OBJECTID \
    --display-name $CURRENT_USER \
    --identity $DB_ADMIN_USER_ASSIGNED_IDENTITY_NAME

#10:ok
IDENTITY_LOGIN_NAME="mysql_conn"

cat <<EOF >createuser.sql
SET aad_auth_validate_oids_in_tenant = OFF;
DROP USER IF EXISTS '${IDENTITY_LOGIN_NAME}'@'%';
CREATE AADUSER '${IDENTITY_LOGIN_NAME}' IDENTIFIED BY '${USER_ASSIGNED_CLIENT_ID}';
GRANT ALL PRIVILEGES ON ${DATABASE_NAME}.* TO '${IDENTITY_LOGIN_NAME}'@'%';
FLUSH privileges;
EOF

#11: FAIL
RDBMS_ACCESS_TOKEN=$(az account get-access-token \
    --resource-type oss-rdbms \
    --query accessToken \
    --output tsv) 
echo $RDBMS_ACCESS_TOKEN

az mysql flexible-server execute \
    --name ${MYSQL_SERVER_NAME} \
    --admin-user ${CURRENT_USER} \
    --admin-password ${RDBMS_ACCESS_TOKEN} \
    --file-path "createuser.sql"   

################NEW



################ENDNEW

kubectl get pods
kubectl delete pod customers-service-b654d848c-7cdxb
kubectl delete pod vets-service-68dfb77f9b-t6697
kubectl delete pod visits-service-86b4759946-mvmg6

PRIVATE_ENDPOINTS_SUBNET_CIDR=10.1.4.0/24
PRIVATE_ENDPOINTS_SUBNET_NAME=private-endpoints-subnet
   
az network vnet subnet create \
    --name $PRIVATE_ENDPOINTS_SUBNET_NAME \
    --resource-group $RESOURCE_GROUP \
    --vnet-name $VIRTUAL_NETWORK_NAME \
    --address-prefix $PRIVATE_ENDPOINTS_SUBNET_CIDR

az network vnet subnet update \
   --name $PRIVATE_ENDPOINTS_SUBNET_NAME \
   --resource-group $RESOURCE_GROUP \
   --vnet-name $VIRTUAL_NETWORK_NAME \
   --disable-private-endpoint-network-policies true

KEYVAULT_RESOURCE_ID=$(az resource show -g ${RESOURCE_GROUP} -n ${KEYVAULT_NAME} --query "id" --resource-typ "Microsoft.KeyVault/vaults" -o tsv)

az network private-endpoint create --resource-group $RESOURCE_GROUP \
    --vnet-name $VIRTUAL_NETWORK_NAME \
    --subnet $PRIVATE_ENDPOINTS_SUBNET_NAME \
    --name pe-openlab-keyvault \
    --private-connection-resource-id "$KEYVAULT_RESOURCE_ID" \
    --group-id vault \
    --connection-name openlab-keyvault-connection \
    --location $LOCATION

az network private-dns zone create \
    --resource-group $RESOURCE_GROUP \
    --name "privatelink.vaultcore.azure.net"

az network private-dns link vnet create \
    --resource-group $RESOURCE_GROUP \
    --zone-name "privatelink.vaultcore.azure.net" \
    --name MyVaultDNSLink \
    --virtual-network $VIRTUAL_NETWORK_NAME \
    --registration-enabled false