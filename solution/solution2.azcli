# Adding Azure Monitor --> workspace creation not needed, there is a workspace created at ACA environment creation

# WORKSPACE=la-$APPNAME-$UNIQUEID

# az monitor log-analytics workspace create \
#     --resource-group $RESOURCE_GROUP \
#     --workspace-name $WORKSPACE


# WORKSPACEID=$(az monitor log-analytics workspace show -n $WORKSPACE -g $RESOURCE_GROUP --query id -o tsv)

# az containerapp env show --name $ACA_ENVIRONMENT --resource-group $RESOURCE_GROUP 

WORKSPACEID=$(az monitor log-analytics workspace list --resource-group $RESOURCE_GROUP --query [0].name -o tsv)

echo $WORKSPACEID

# App Insights

AINAME=ai-$APPNAME-$UNIQUEID
az extension add -n application-insights
az monitor app-insights component create \
    --app $AINAME \
    --location $LOCATION \
    --kind web \
    -g $RESOURCE_GROUP \
    --workspace $WORKSPACEID

AI_CONNECTIONSTRING=$(az monitor app-insights component show --app $AINAME -g $RESOURCE_GROUP --query connectionString)

echo $AI_CONNECTIONSTRING

az containerapp env telemetry app-insights set \
  --name $ACA_ENVIRONMENT \
  --resource-group $RESOURCE_GROUP \
  --connection-string "$AI_CONNECTIONSTRING" \
  --enable-open-telemetry-traces true \
  --enable-open-telemetry-logs true

# After install all microservices seem to be restarting ... so give it a bit of time for the restarts to complete. Refresh all pages a couple of times ...
# Buuut, connection string stays empty :| 

az containerapp env telemetry app-insights show \
  --name $ACA_ENVIRONMENT \
  --resource-group $RESOURCE_GROUP

# added in pom: 

# <dependency>
#     <groupId>io.opentelemetry.javaagent</groupId>
#     <artifactId>opentelemetry-javaagent-api</artifactId>
#     <version>0.16.1</version>
#     <scope>runtime</scope>
# </dependency>

echo $VERSION

az containerapp update \
  --name api-gateway \
  --resource-group $RESOURCE_GROUP \
  --artifact ./spring-petclinic-api-gateway/target/spring-petclinic-api-gateway-$VERSION.jar 

# add otel: to connection string in config repo

az containerapp up \
  --name customers-service \
  --resource-group $RESOURCE_GROUP \
  --artifact ./spring-petclinic-customers-service/target/spring-petclinic-customers-service-$VERSION.jar \
  --env-vars SPRING_DATASOURCE_DRIVER_CLASS_NAME=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver

az containerapp up \
  --name visits-service \
  --resource-group $RESOURCE_GROUP \
  --artifact ./spring-petclinic-visits-service/target/spring-petclinic-visits-service-$VERSION.jar \
  --env-vars SPRING_DATASOURCE_DRIVER_CLASS_NAME=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver

az containerapp up \
  --name vets-service \
  --resource-group $RESOURCE_GROUP \
  --artifact ./spring-petclinic-vets-service/target/spring-petclinic-vets-service-$VERSION.jar \
  --env-vars SPRING_DATASOURCE_DRIVER_CLASS_NAME=io.opentelemetry.instrumentation.jdbc.OpenTelemetryDriver

